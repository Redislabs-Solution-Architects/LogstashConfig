input {

# Use beats
#  beats {
#    port => 5044
#  }

#  Use local files - Uncomment the following lines to use logstash on localhost
   file {
     path => "/var/opt/redislabs/log/cnm_exec.log"
     type => "cnm_exec"
     tags => ['redisenteprise']
   }
 
   file {
     path => "/var/opt/redislabs/log/event_log.log"
     type => "eventlog"
     tags => ['redisenteprise']
   }
 
   file {
     path => "/var/opt/redislabs/log/redis-128.log"
     type => "shardlog"
     tags => ['redisenteprise']
   }

}

filter {
  
  if [type] == "shardlog" {

    grok  {
      match => { "path" => "%{GREEDYDATA}/redis-%{POSINT:shard_id}.log" }
    }

    grok {
      match => { "message" => "%{POSINT}:%{WORD} %{GREEDYDATA:re_timestamp} (\*|#) %{GREEDYDATA}"}
    }

    date {
      match => ["re_timestamp", "dd MMM yyyy HH:mm:ss.SSS"]
    }

  }

  if [type] == "cnm_exec" {

    grok  {
      match => { "message" => "%{TIMESTAMP_ISO8601:re_timestamp} %{LOGLEVEL:loglevel} %{WORD:program} %{WORD:thread}(:(?: %{WORD:action}:)? %{WORD:component}:%{POSINT:component_id}(?:\[%{WORD:step}\])?: %{GREEDYDATA:re_message}|%{GREEDYDATA:re_message})" }
      }
  }


  if [type] == "eventlog" {

    grok  {
      match => { "message" => "%{TIMESTAMP_ISO8601:re_timestamp} %{LOGLEVEL:loglevel} %{WORD:program} %{WORD:thread}: %{GREEDYDATA:re_json}"
      }
    }

    json {
      source => "re_json"
    }

    if "_grokparsefailure" not in [tags] {
      mutate {
        remove_field => ["re_json"]
      }
    }

  }

  if "redisenteprise" in [tags] {

    date {
      match => ["re_timestamp", ISO8601]
    }

  }


}

output {
#  if "_grokparsefailure" in [tags] {
    stdout { codec => rubydebug }
#  }
}
